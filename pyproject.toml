# =====================================================================
# üè¶ BankModelFactory
# Projet professionnel de Machine Learning pour la pr√©diction marketing bancaire
# Architecture modulaire, reproductible et d√©ployable en cloud.
# =====================================================================

[tool.poetry]
# --- M√©tadonn√©es du package ---
name = "bankmodelfactory"                     # Nom du package (minuscule et sans espace)
version = "0.1.0"                             # Version initiale du projet
description = "End-to-end ML pipeline for predictive marketing in banking"
authors = ["Manda Surel <s239150.eps@gmail.com>"]
license = "MIT"
packages = [{ include = "bankmodelfactory", from = "src" }]   # Indique que le code source est dans src/

# =====================================================================
# üì¶ D√©pendances principales (runtime)
# =====================================================================
[tool.poetry.dependencies]
python = ">=3.10,<3.13"                       # Compatibilit√© Python (stabilit√© entre 3.10 et 3.12)

# --- Core data science ---
pandas = "^2.2"                               # Manipulation de donn√©es
numpy = "^2.0"                                # Calculs num√©riques haute performance
scikit-learn = "^1.5"                         # Mod√®les ML de base et preprocessing
catboost = "^1.2"                             # Mod√®le performant pour features cat√©gorielles

# --- Suivi et configuration du pipeline ---
mlflow = "^3.5.1"                             # Tracking des exp√©riences ML (m√©triques, mod√®les)
hydra-core = "^1.3"                           # Gestion hi√©rarchique des configurations YAML
typer = "^0.12"                               # CLI moderne et intuitive pour lancer les scripts
pyyaml = "^6.0"                               # Lecture/√©criture de fichiers YAML

# --- API & d√©ploiement ---
fastapi = "^0.115"                            # Framework web moderne pour l‚ÄôAPI d‚Äôinf√©rence
uvicorn = { extras = ["standard"], version = "^0.30" }  # Serveur ASGI performant pour FastAPI
python-dotenv = "^1.0"                        # Chargement automatique des variables d‚Äôenvironnement (.env)

# =====================================================================
# üß™ D√©pendances de d√©veloppement
# =====================================================================
loguru = "^0.7.3"
[tool.poetry.group.dev.dependencies]
# --- Qualit√© et style ---
black = "^24.8"                               # Formatteur de code standard
ruff = "^0.6"                                 # Linter ultra-rapide (remplace flake8/pylint)
isort = "^5.13"                               # Trie automatique des imports
mypy = "^1.11"                                # V√©rification de typage statique (qualit√© + robustesse)

# --- Tests et couverture ---
pytest = "^8.3"                               # Framework de tests unitaires
pytest-cov = "^5.0"                           # Mesure de la couverture de test
pre-commit = "^3.8"                           # V√©rification automatique avant chaque commit

# --- Gestion de pipeline et versioning de donn√©es (optionnel) ---
dvc = { version = "^3.51", optional = true }  # Data Version Control pour tra√ßabilit√© des datasets

# =====================================================================
# ‚öôÔ∏è Configuration des outils de code quality
# =====================================================================

[tool.ruff]
# --- Param√®tres du linter Ruff ---
line-length = 100                             # Longueur max par ligne (style pro)
select = ["E","F","I","B","UP","SIM","C4"]    # R√®gles activ√©es : erreurs, import, simplifications...

[tool.black]
# --- Param√®tres du formatteur Black ---
line-length = 100                             # Align√© avec Ruff pour coh√©rence

[tool.isort]
# --- Param√®tres du gestionnaire d‚Äôimports ---
profile = "black"                             # S‚Äôaligne automatiquement sur le style Black

[tool.mypy]
# --- Param√®tres de typage statique ---
ignore_missing_imports = true                 # Ignore les libs non typ√©es (numpy, pandas)
strict = true                                 # Active tous les checks de typage stricts

# =====================================================================
# üèóÔ∏è Syst√®me de build
# =====================================================================
[build-system]
requires = ["poetry-core>=1.8.0"]             # Backend de build de Poetry
build-backend = "poetry.core.masonry.api"     # Interface standard pour construire le package
